<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Debug Logger</title>
  <subtitle>write or not</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://emin-hsieh.github.io/blog/"/>
  <updated>2017-03-31T08:13:37.000Z</updated>
  <id>https://emin-hsieh.github.io/blog/</id>
  
  <author>
    <name>Emin Hsieh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RDP 服務串接</title>
    <link href="https://emin-hsieh.github.io/blog/2017/03/31/my-rdp-service/"/>
    <id>https://emin-hsieh.github.io/blog/2017/03/31/my-rdp-service/</id>
    <published>2017-03-31T08:13:37.000Z</published>
    <updated>2017-03-31T08:13:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ok, 接下來，來記錄一下過去這一個多月來坎苛的 RDP 服務串接歷程好了</p>
<p>首先，先來說明一下什麼是 RDP 服務串接<br>這名詞其實是我自已創造的，並不是某種 MS 的功能，請千萬別誤會了</p>
<p>這個 <strong>“服務”</strong> 的功用是</p>
<p><strong><em> 用來幫我上傳檔案到遠端某台主機上 </em></strong></p>
<p>聽起來好像很簡單，但我卻在這吐了不少血<br><a id="more"></a><br>先來個前情提要</p>
<ul>
<li>東西要 go prod ，要先把檔案放上 某台主機上</li>
<li>只能用 windows RDP 的協定來傳輸檔案(FTP、http(s)、rsync 什麼的就都別想了)</li>
<li>有很多 RD 要上 code</li>
</ul>
<p>這樣聽起來只要能建立起 RDP ，再把本機的資料夾 mount 上去，不就可以了吧</p>
<p>這樣說絕對沒錯!!<br>只是會出現下一個問題</p>
<p>我必需為每一個要上 code 的 RD 都申請一個帳號(不允許使用 domain name account)<br>但基於安全性考量，我並不想這麼做，再加上主機又不是我在管的<br>萬一被人玩壞就慘了</p>
<p>so 第一個 solution 出現<br>我自已有養個 ci-bot (hubot) 並放在公司 internal 的主機上</p>
<ol>
<li>先把 RDP 連線存成檔案，並設好要 mount 的資料夾</li>
<li><p>寫個小script，讓我可以直接對 bot 下命令去打開這個遠端主機連線檔</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">command = <span class="string">"mstsc \\path\\to\\file.rdp"</span></div><div class="line">@exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec</div><div class="line">@exec command, <span class="function"><span class="params">(error, stdout, stderr)</span> -&gt;</span></div><div class="line">  <span class="keyword">if</span> stderr</div><div class="line">     <span class="keyword">return</span> <span class="string">"ERROR (stderr): "</span> + stderr</div><div class="line">  <span class="keyword">if</span> error</div><div class="line">    <span class="keyword">return</span> <span class="string">"ERROR (error)"</span> + error</div><div class="line">  <span class="keyword">return</span> <span class="string">"更新完成 <span class="subst">#&#123;stdout&#125;</span>"</span></div></pre></td></tr></table></figure>
</li>
<li><p>開啟後直接執行 遠端主機上的某個 bat，直接開始 copy</p>
<img src="http://kb.parallels.com/Attachments/kcs-39048/mstscc.png">
</li>
</ol>
<p>到此為止，我感覺這世界是美好的</p>
<img src="http://i.imgur.com/t8zvc.gif">
<p>但美好的時光總是過的特快</p>
<p>某天被通知，prod 的主機群發現勒索病毒，且受災程度不小<br>在重建遠端主機後，我的惡夢就來了</p>
<p>為了怕再次重演這樣的事情</p>
<p><strong>start program on connection</strong> 被禁止了….<br>新的 遠端主機不再允許連線時去執行 explorer.exe 以外的程式<br>也就是說只能開桌面了<br>wtf…..</p>
<p>在消沉了好幾天後，開始找其他的 solution<br>好吧!!  現在不能用自動執行 bat(copy)</p>
<p>那我用 手動 總行了吧</p>
<p>這下找上了 autoit (坑坑坑…)</p>
<p>ok 新的方案</p>
<ol>
<li>bot 收到指令後不再跑原生的 mstsc ，而是跑自已寫的 autoit script</li>
<li><p>再來用 auotit 寫個小的 exe 檔，這會開啟 rdp 的 file 並建立連線</p>
<figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mstsc \\<span class="built_in">path</span>\\to\\file.rdp</div></pre></td></tr></table></figure>
</li>
<li><p>等 rdp window 起來後，對遠端的主機送出 keyboard command</p>
<figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">run some bat file</div></pre></td></tr></table></figure>
</li>
<li><p>視窗關閉後，開始分析 copy log 並回傳結果</p>
</li>
</ol>
<p>好啦!!  初步的 autoit script 很簡單</p>
<ul>
<li>auto_run_rdp_script.au3<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">doLog(<span class="string">"開始跑 rdp"</span>)</div><div class="line">RUN_MSTSC()</div><div class="line"><span class="function"><span class="keyword">Func</span> <span class="title">RUN_MSTSC</span><span class="params">()</span></span></div><div class="line">    <span class="built_in">Run</span>(<span class="string">"MSTSC.EXE .\file.RDP"</span>)</div><div class="line"></div><div class="line">    <span class="comment">; Wait 10 seconds for the Notepad window to appear.</span></div><div class="line">    <span class="keyword">Local</span> $hWnd = WinWaitActive(<span class="string">"[CLASS:TscShellContainerClass]"</span>)</div><div class="line"></div><div class="line"></div><div class="line">   <span class="keyword">If</span> <span class="literal">Not</span> <span class="built_in">WinActivate</span>($hWnd ) <span class="keyword">Then</span> <span class="built_in">WinActivate</span>($hWnd )</div><div class="line">   doLog(<span class="string">"等待連接中...."</span>)</div><div class="line">   <span class="built_in">Sleep</span>(<span class="number">10000</span>)</div><div class="line">   <span class="built_in">WinActivate</span>($hWnd )</div><div class="line">   doLog(<span class="string">"送出指令...."</span>)</div><div class="line"></div><div class="line">  <span class="built_in">Send</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"#r"</span>)</div><div class="line">  <span class="built_in">Sleep</span>(<span class="number">1000</span>)<span class="comment">;</span></div><div class="line">  <span class="built_in">WinActivate</span>($hWnd )</div><div class="line">  <span class="built_in">Send</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"copy.bat"</span>)</div><div class="line">  <span class="built_in">Sleep</span>(<span class="number">1000</span>)<span class="comment">;</span></div><div class="line">  <span class="built_in">Send</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"&#123;ENTER&#125;"</span>)</div><div class="line"></div><div class="line"><span class="keyword">EndFunc</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>script 很陽春，但卡在對 autoit 的不熟悉<br>接下來不停的遇到的問題 就是</p>
<ol>
<li>rdp 的 window 沒有取到 focus 造成 command 送不進去….</li>
<li>在主機沒有人連線的狀況下，RDP 的 window 無法 active ，造成後面的流程跑不下去</li>
</ol>
<p>好吧… 但事情總是要解決<br>先來處理第一個問題</p>
<ol>
<li>rdp 的 window 沒有取到 focus<br>本來解決這個我是想用 WinWaitActive 這個函數來處理<br>等到 window active 後再來做下面的動作<br>但沒想到，卻因此產生第二個問題</li>
<li>非視窗模式下，WinWaitActive 不會有反應………<br>這可能是 window 的機制，這個我到是能了解<br>但這下我就只能回到最最最土砲的方式來做…</li>
</ol>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">;~ 先還原桌面, 讓等下的 rdp window 能拿到 focus</span></div><div class="line"><span class="built_in">Send</span>(<span class="string">"#d"</span>)</div><div class="line"></div><div class="line">doLog(<span class="string">"開始跑 rdp"</span>)</div><div class="line">RUN_MSTSC()</div><div class="line"><span class="function"><span class="keyword">Func</span> <span class="title">RUN_MSTSC</span><span class="params">()</span></span></div><div class="line">    <span class="built_in">Run</span>(<span class="string">"MSTSC.EXE .\file.RDP"</span>)</div><div class="line"></div><div class="line">    <span class="comment">; Wait 10 seconds for the Notepad window to appear.</span></div><div class="line">    <span class="keyword">Local</span> $hWnd = <span class="built_in">WinWait</span>(<span class="string">"[CLASS:TscShellContainerClass]"</span>)</div><div class="line">    doLog(<span class="string">"等待連接中...."</span>)</div><div class="line">    </div><div class="line">    <span class="built_in">Sleep</span>(<span class="number">10000</span>)</div><div class="line">    doLog(<span class="string">"送出指令...."</span>)</div><div class="line">    </div><div class="line">    <span class="built_in">ControlSend</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"#r"</span>)</div><div class="line">    <span class="built_in">Sleep</span>(<span class="number">1000</span>)<span class="comment">;</span></div><div class="line"></div><div class="line">    <span class="built_in">ControlSend</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"copy.bat"</span>)</div><div class="line">    <span class="built_in">Sleep</span>(<span class="number">1000</span>)<span class="comment">;</span></div><div class="line"></div><div class="line">    <span class="built_in">ControlSend</span>($hWnd, <span class="string">""</span>, <span class="string">""</span>, <span class="string">"&#123;ENTER&#125;"</span>)</div><div class="line">	  doLog(<span class="string">"等待完成"</span>)</div><div class="line">	  WinWaitClose($hWnd)</div><div class="line"><span class="keyword">EndFunc</span></div></pre></td></tr></table></figure>
<p>其實重點只有兩個</p>
<ol>
<li><p>先還原主機的桌面 </p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Send</span>(<span class="string">"#d"</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>把 WinWaitActive 改用 WinWait ，讓他不會受限於 window 沒有 active </p>
</li>
</ol>
<p>但我想這應該還是會有不少問題….<br>只能見招拆招了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ok, 接下來，來記錄一下過去這一個多月來坎苛的 RDP 服務串接歷程好了&lt;/p&gt;
&lt;p&gt;首先，先來說明一下什麼是 RDP 服務串接&lt;br&gt;這名詞其實是我自已創造的，並不是某種 MS 的功能，請千萬別誤會了&lt;/p&gt;
&lt;p&gt;這個 &lt;strong&gt;“服務”&lt;/strong&gt; 的功用是&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; 用來幫我上傳檔案到遠端某台主機上 &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;聽起來好像很簡單，但我卻在這吐了不少血&lt;br&gt;
    
    </summary>
    
    
      <category term="rdp" scheme="https://emin-hsieh.github.io/blog/tags/rdp/"/>
    
      <category term="autoit" scheme="https://emin-hsieh.github.io/blog/tags/autoit/"/>
    
      <category term="hubot" scheme="https://emin-hsieh.github.io/blog/tags/hubot/"/>
    
  </entry>
  
  <entry>
    <title>react-hot-loader 實測</title>
    <link href="https://emin-hsieh.github.io/blog/2017/03/30/react-hot-loader-%E5%AF%A6%E6%B8%AC/"/>
    <id>https://emin-hsieh.github.io/blog/2017/03/30/react-hot-loader-實測/</id>
    <published>2017-03-30T06:51:36.000Z</published>
    <updated>2017-03-31T02:15:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>久未回 js 的懷抱，真沒想到1年半的空白會產生這麼多的問題</p>
<p>一開始只是很單純的想找回 js 的手感，並來練一下 react，沒想到處處是坑</p>
<p>最大的問題在，前端的開發套件百家爭鳴外，版本也是個很大的問題</p>
<p>尤其以版本不相容，造成找到的資料不適用，不然就是噴錯也是噴的我一頭霧水</p>
<p>抱怨到此，來說說我遇到的狀況吧</p>
<hr>
<p>一開始想練習 react ，便著手開始做開發環境的搭設</p>
<ol>
<li>安裝 webpack、webpack-dev-server<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"webpack"</span>: <span class="string">"^2.3.2"</span>,</div><div class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^2.4.2"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>安裝 babel</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"babel-core"</span>: <span class="string">"^6.24.0"</span>,</div><div class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^6.4.1"</span>,</div><div class="line">    <span class="attr">"babel-preset-es2015"</span>: <span class="string">"^6.24.0"</span>,</div><div class="line">    <span class="attr">"babel-preset-react"</span>: <span class="string">"^6.23.0"</span>,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>開始建立 webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">"webpack"</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> cfg = &#123;&#125;;</div><div class="line">cfg.entry = path.resolve(__dirname,<span class="string">'./src/App.js'</span>);</div><div class="line"></div><div class="line">cfg.devtool = <span class="string">"source-map"</span>;</div><div class="line">cfg.output = &#123;</div><div class="line">  <span class="attr">path</span> : path.resolve(__dirname, <span class="string">"dist"</span>),</div><div class="line">  <span class="attr">filename</span> : <span class="string">"bundle.js"</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line">cfg.devServer = &#123;</div><div class="line">  <span class="attr">contentBase</span>: path.join(__dirname, <span class="string">"."</span>),</div><div class="line">  <span class="attr">compress</span>: <span class="literal">true</span>,</div><div class="line">  <span class="attr">hot</span>:<span class="literal">true</span>,</div><div class="line">  <span class="attr">port</span>: <span class="number">9000</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">cfg.externals = &#123;</div><div class="line">    <span class="string">'react'</span>: <span class="string">'React'</span>,</div><div class="line">    <span class="string">'reactdom'</span>: <span class="string">'ReactDOM'</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> plugins = [</div><div class="line">  <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</div><div class="line">  <span class="keyword">new</span> webpack.NoErrorsPlugin()</div><div class="line">];</div><div class="line"></div><div class="line">cfg.plugins = plugins;</div><div class="line"></div><div class="line"><span class="keyword">var</span> rules = [</div><div class="line">  &#123;</div><div class="line">    <span class="attr">test</span>: <span class="regexp">/\.js?$/</span>,</div><div class="line">    <span class="attr">exclude</span>: <span class="regexp">/(node_modules|bower_components)/</span>,</div><div class="line">    <span class="attr">loader</span>:<span class="string">'babel-loader'</span></div><div class="line">  &#125;</div><div class="line">];</div><div class="line">cfg.module = &#123;</div><div class="line">  rules</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = cfg;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>以上就把開發環境搞定，練習的過程中，對不停的 reload page開始厭煩<br>便裝了 react-hot-loader，本以為裝了就上!!  沒想到問題還是一堆</p>
<p>撞牆的過程，就不說了<br>主要的原因為</p>
<p>react-hot-loader 有分 1.x 版跟 3.x beat 版<br>一開始的專案，我所用的是 external 的 react ，也就是由 cdn 上抓下來的</p>
<p>react-hot-loader 1.x 版的並不支援此方法<br>必需要把 react 包進 project 中才行<br>而設定方法</p>
<ul>
<li>修改 webpack.config.js <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//修改 entry</span></div><div class="line">cfg.entry = [</div><div class="line">    <span class="string">'webpack-dev-server/client?http://localhost:3000'</span>,</div><div class="line">    <span class="string">'webpack/hot/only-dev-server'</span>,</div><div class="line">    path.resolve(__dirname,<span class="string">'./src/App.js'</span>)</div><div class="line">  ]</div><div class="line"></div><div class="line"><span class="comment">//拿掉外部 React</span></div><div class="line"><span class="comment">// cfg.externals = &#123;</span></div><div class="line"><span class="comment">//     'react': 'React',</span></div><div class="line"><span class="comment">//     'reactdom': 'ReactDOM'</span></div><div class="line"><span class="comment">// &#125;;</span></div><div class="line"></div><div class="line"><span class="comment">//修改 loader</span></div><div class="line"><span class="keyword">var</span> rules = [</div><div class="line">  &#123;</div><div class="line">    <span class="attr">test</span>: <span class="regexp">/\.js?$/</span>,</div><div class="line">    <span class="attr">exclude</span>: <span class="regexp">/(node_modules|bower_components)/</span>,</div><div class="line">    <span class="attr">loaders</span>: [<span class="string">'react-hot-loader'</span>, <span class="string">'babel-loader'</span>]</div><div class="line">  &#125;</div><div class="line">];</div></pre></td></tr></table></figure>
</li>
</ul>
<p>以上再重啟專案<br>應該就可以了</p>
<p><strong><em>重點</em></strong></p>
<ol>
<li>react-hot-loader 要是 1.x 版</li>
<li>React 必需要是 <strong>internal lib</strong></li>
<li>webpack 需要做相關的設定修改</li>
</ol>
<p>網路上有人會 建立 </p>
<ul>
<li>server.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> WebpackDevServer = <span class="built_in">require</span>(<span class="string">'webpack-dev-server'</span>);</div><div class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'./webpack.config'</span>);</div><div class="line"></div><div class="line"><span class="keyword">new</span> WebpackDevServer(webpack(config), &#123;</div><div class="line">  <span class="attr">publicPath</span>: config.output.publicPath,</div><div class="line">  <span class="attr">hot</span>: <span class="literal">true</span>,</div><div class="line">  <span class="attr">historyApiFallback</span>: <span class="literal">true</span></div><div class="line">&#125;).listen(<span class="number">3000</span>, <span class="string">'localhost'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, result</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (err) &#123;</div><div class="line">    <span class="built_in">console</span>.log(err);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Listening at localhost:3000'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>再用 </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node server.js</div></pre></td></tr></table></figure>
<p>來啟動 webpack-dev-server<br>但我自已習慣是直接用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dev:&quot;webpack-dev-server</div><div class="line">npm run dev</div></pre></td></tr></table></figure></p>
<p>來啟動 wds</p>
<p>ok 再來談談 react-hot-loader 3.xBeta 版<br>因為本人莫名的堅持，非要把 React 拉出去不可<br>故參考這篇<br><a href="https://github.com/gaearon/react-hot-loader/blob/master/docs/README.md#usage-with-external-react" target="_blank" rel="external">https://github.com/gaearon/react-hot-loader/blob/master/docs/README.md#usage-with-external-react</a></p>
<p>so Let’s go</p>
<ol>
<li><p>先安裝好 3.x 的 react-hot-loader</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i react-hot-loader@next</div></pre></td></tr></table></figure>
</li>
<li><p>修改 webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//entry 改成</span></div><div class="line">cfg.entry = [</div><div class="line">    <span class="string">'react-hot-loader/patch'</span>,</div><div class="line">    path.resolve(__dirname,<span class="string">'./src/App.js'</span>)</div><div class="line">];</div><div class="line"></div><div class="line">cfg.externals = &#123;</div><div class="line">    <span class="string">'react'</span>: <span class="string">'React'</span>,</div><div class="line">    <span class="string">'reactdom'</span>: <span class="string">'ReactDOM'</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> rules = [</div><div class="line">  &#123;</div><div class="line">    <span class="attr">test</span>: <span class="regexp">/\.js?$/</span>,</div><div class="line">    <span class="attr">exclude</span>: <span class="regexp">/(node_modules|bower_components)/</span>,</div><div class="line">    <span class="attr">loader</span>:<span class="string">'babel-loader'</span></div><div class="line">  &#125;</div><div class="line">];</div></pre></td></tr></table></figure>
</li>
<li><p>修改 .babelrc</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"presets"</span>: [</div><div class="line">    <span class="string">"es2015"</span>, <span class="string">"react"</span></div><div class="line">  ],</div><div class="line">  <span class="attr">"plugins"</span>: [<span class="string">"react-hot-loader/babel"</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><strong>修改 entry file</strong><br>我原本的 entry file 是<br>App.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;render&#125; <span class="keyword">from</span> <span class="string">"reactdom"</span>;</div><div class="line"><span class="keyword">import</span> Comp <span class="keyword">from</span> <span class="string">'./view/Comp'</span>;</div><div class="line"></div><div class="line">render( &lt;Comp/&gt;, <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>));</div></pre></td></tr></table></figure>
<p>修改為  </p>
<figure class="highlight jsx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;render&#125; <span class="keyword">from</span> <span class="string">"reactdom"</span>;</div><div class="line"><span class="keyword">import</span> Comp <span class="keyword">from</span> <span class="string">'./view/Comp'</span>;</div><div class="line"><span class="keyword">import</span> &#123; AppContainer &#125; <span class="keyword">from</span> <span class="string">'react-hot-loader'</span></div><div class="line">render( &lt;AppContainer&gt;</div><div class="line">    &lt;Comp/&gt;</div><div class="line">  &lt;/AppContainer&gt;, <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>));</div><div class="line"></div><div class="line">  <span class="comment">// Hot Module Replacement API</span></div><div class="line"><span class="keyword">if</span> (<span class="built_in">module</span>.hot) &#123;</div><div class="line">  <span class="built_in">module</span>.hot.accept(<span class="string">'./view/Comp'</span>, () =&gt; &#123;</div><div class="line">    <span class="keyword">const</span> NextApp = <span class="built_in">require</span>(<span class="string">'./view/Comp'</span>).default;</div><div class="line">    render(</div><div class="line">      &lt;AppContainer&gt;</div><div class="line">        &lt;NextApp/&gt;</div><div class="line">      &lt;/AppContainer&gt;,</div><div class="line">      <span class="built_in">document</span>.getElementById(<span class="string">'app'</span>)</div><div class="line">    );</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>ok 一樣重點匯整</p>
<ol>
<li>react-hot-loader 要是 3.x 版</li>
<li>React 必需要是 external lib</li>
<li>webpack 需要做相關的設定修改</li>
<li>.babelrc 要加入 plugin 的設定</li>
<li>修改 entry file 的 root comp….(WTF!!)</li>
</ol>
<p>要注意的是第5點，這個是直接動到 code<br>可能是要分成</p>
<ul>
<li>App.hot.js</li>
<li>App.js</li>
</ul>
<p>並用 webpack.config.js 來設定要用那個 entry file<br>我看非常有可能一不小心就包錯檔…</p>
<p>搞完這麼大一串，不禁讓我自已開始思考<br>前端還有多少個坑要踩…..</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;久未回 js 的懷抱，真沒想到1年半的空白會產生這麼多的問題&lt;/p&gt;
&lt;p&gt;一開始只是很單純的想找回 js 的手感，並來練一下 react，沒想到處處是坑&lt;/p&gt;
&lt;p&gt;最大的問題在，前端的開發套件百家爭鳴外，版本也是個很大的問題&lt;/p&gt;
&lt;p&gt;尤其以版本不相容，造成找到的資料不適用，不然就是噴錯也是噴的我一頭霧水&lt;/p&gt;
&lt;p&gt;抱怨到此，來說說我遇到的狀況吧&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一開始想練習 react ，便著手開始做開發環境的搭設&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安裝 webpack、webpack-dev-server&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;webpack&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^2.3.2&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;webpack-dev-server&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;^2.4.2&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="react" scheme="https://emin-hsieh.github.io/blog/tags/react/"/>
    
      <category term="javascript" scheme="https://emin-hsieh.github.io/blog/tags/javascript/"/>
    
      <category term="nodejs" scheme="https://emin-hsieh.github.io/blog/tags/nodejs/"/>
    
  </entry>
  
</feed>
